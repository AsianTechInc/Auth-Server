worker_processes 4;

events { worker_connections 1024; }

http {
  upstream app {
    least_conn;
    server app1:3000 weight=10 max_fails=3 fail_timeout=30s;
    server app2:3000 weight=10 max_fails=3 fail_timeout=30s;
    server app3:3000 weight=10 max_fails=3 fail_timeout=30s;    
  }

  server {
    listen                  80;
    server_name             rnd;
    charset                 utf-8;
    client_max_body_size    10M;
    access_log              /var/log/nginx/dev.log;
    error_log               /var/log/nginx/dev.error.log debug;

    location / {
      proxy_pass            http://app;
      proxy_http_version    1.1;
      proxy_cache_bypass    $http_upgrade;
      proxy_redirect        off;

      proxy_set_header      Upgrade               $http_upgrade;
      proxy_set_header      Connection            'upgrade';
      proxy_set_header      Host                  $host;
      proxy_set_header      X-Real-IP             $remote_addr;
      proxy_set_header      X-Forwarded-For       $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto     $scheme;

      if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        #
        # Custom headers and headers various browsers *should* be OK with but aren't
        #
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        #
        # Tell client that this pre-flight info is valid for 20 days
        #
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
      if ($request_method = 'POST') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      }
      if ($request_method = 'GET') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
      }
    }
  }

  server {
    listen                  443 ssl;
    server_name             at-rnd.ddns.net;
    charset                 utf-8;
    client_max_body_size    10M;
    access_log              /var/log/nginx/pro.log;
    error_log               /var/log/nginx/pro.error.log debug;

    # SSL
    ssl                     on;    
    ssl_certificate         /etc/nginx/ssl/cert.pem;
    ssl_certificate_key     /etc/nginx/ssl/key.pem;

    location / {
      proxy_pass            http://app;
      proxy_http_version    1.1;
      proxy_cache_bypass    $http_upgrade;
      proxy_redirect        off;

      proxy_set_header      Upgrade               $http_upgrade;
      proxy_set_header      Connection            'upgrade';
      proxy_set_header      Host                  $host;
      proxy_set_header      X-Real-IP             $remote_addr;
      proxy_set_header      X-Forwarded-For       $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto     $scheme;

      # SSL
      proxy_set_header      X-HTTPS-Protocol      $ssl_protocol;
    }
  }
}
