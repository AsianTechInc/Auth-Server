# should be 1 per CPU core
worker_processes    2;

events {
    # max clients = worker_processes * worker_connections
    worker_connections 1024;
}
worker_rlimit_nofile    2048;

http {
    server_tokens off;

    upstream web {
        least_conn;
        server web:5000 weight=10 max_fails=3 fail_timeout=30s;
    }

    upstream api {
        least_conn;
        server api:3000 weight=10 max_fails=3 fail_timeout=30s;
    }

    server {
        listen                  80;
        server_name             172.17.0.4;
        charset                 utf-8;
        client_max_body_size    10M;
        access_log              off;
        error_log               /var/log/nginx/error.log;

        location /api {
            proxy_pass            http://api;
            proxy_http_version    1.1;
            proxy_cache_bypass    $http_upgrade;
            proxy_redirect        off;

            proxy_set_header      Upgrade               $http_upgrade;
            proxy_set_header      Connection            'upgrade';
            proxy_set_header      Host                  $host;
            proxy_set_header      X-Real-IP             $remote_addr;
            proxy_set_header      X-Forwarded-For       $proxy_add_x_forwarded_for;
            proxy_set_header      X-Forwarded-Proto     $scheme;

            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }

            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                add_header 'Access-Control-Max-Age' 604800;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            break;
        }

        location / {
            proxy_pass              http://web;
            proxy_http_version      1.1;
            proxy_cache_bypass      $http_upgrade;
            proxy_redirect          off;

            proxy_set_header        Upgrade               $http_upgrade;
            proxy_set_header        Connection            'upgrade';
            proxy_set_header        Host                  $host;
            proxy_set_header        X-Real-IP             $remote_addr;
            proxy_set_header        X-Forwarded-For       $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto     $scheme;

            try_files               $uri /$uri /index.php;

            break;
        }
    }

    #    server {
    #        listen                  443 ssl;
    #        # SSL
    #        ssl                     on;
    #        ssl_certificate         /etc/nginx/ssl/cert.pem;
    #        ssl_certificate_key     /etc/nginx/ssl/key.pem;
    #
    #        location /api {
    #            # SSL
    #            proxy_set_header      X-HTTPS-Protocol      $ssl_protocol;
    #        }
    #    }
}
