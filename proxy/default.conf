# should be 1 per CPU core
worker_processes    2;

events {
    # max clients = worker_processes * worker_connections
    worker_connections 1024;
}
worker_rlimit_nofile    2048;

http {
    charset             utf-8;

    gzip                on;
    gzip_static         on;
    gzip_disable        "MSIE [1-6]\.";
    gzip_types          text/plain text/css application/javascript text/xml application/xml application/xml+rss image/svg+xml;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         off;
    server_tokens       off;
    include             mime.types;
    keepalive_timeout   60;

    upstream web {
        least_conn;
        server web:9000 weight=10 max_fails=3 fail_timeout=30s;
    }

    upstream api {
        least_conn;
        server api:3000 weight=10 max_fails=3 fail_timeout=30s;
    }

    server {
        listen                  80;
        server_name             localhost;
        charset                 utf-8;
        client_max_body_size    10M;
        access_log              off;
        error_log               /var/log/nginx/error.log;
        root                    /usr/src;

        location /api {
            proxy_pass            api;
            proxy_http_version    1.1;
            proxy_cache_bypass    $http_upgrade;
            proxy_redirect        off;

            # enable cors
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                add_header 'Access-Control-Max-Age' 604800;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            break;
        }

        location / {
            # try to serve file directly, fallback to index.php
            try_files $uri /index.php$is_args$args;
        }

        location ~ ^/.+\.php(/|$) {
            fastcgi_pass            web;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include                 fastcgi_params;
            fastcgi_param           SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param           PATH_INFO $fastcgi_path_info;
            fastcgi_param           HTTPS off;
            break;
        }
    }

    #    server {
    #        listen                  443 ssl;
    #        # SSL
    #        ssl                     on;
    #        ssl_certificate         /etc/nginx/ssl/cert.pem;
    #        ssl_certificate_key     /etc/nginx/ssl/key.pem;
    #
    #        location /api {
    #            # SSL
    #            proxy_set_header      X-HTTPS-Protocol      $ssl_protocol;
    #        }
    #    }
}
